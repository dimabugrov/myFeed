<Page
    d:DataContext="{d:DesignInstance Type=implementations:FeedViewModel}"
    x:Class="myFeed.Views.Uwp.Views.FeedView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:implementations="using:myFeed.ViewModels.Implementations"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:controls="using:myFeed.Views.Uwp.Controls"
    xmlns:views="using:myFeed.Views.Uwp.Views"
    xmlns:media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:behaviors="using:myFeed.Views.Uwp.Behaviors"
    NavigationCacheMode="Disabled"
    mc:Ignorable="d">

    <Page.Transitions>
        <TransitionCollection>
            <NavigationThemeTransition>
                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                    <EntranceNavigationTransitionInfo />
                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
            </NavigationThemeTransition>
        </TransitionCollection>
    </Page.Transitions>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="FeedGrid.Background" Value="{ThemeResource 
                            SystemControlPageBackgroundChromeLowBrush}"/>
                        <Setter Target="FeedGrid.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="ArticleFrame.(Grid.Column)" Value="1" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="9*"/>
        </Grid.ColumnDefinitions>
        <Frame x:Name="ArticleFrame" Grid.ColumnSpan="2" Canvas.ZIndex="1" SourcePageType="views:EmptyView"/>
        <Grid x:Name="FeedGrid" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <controls:TitleBlock Text="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedViewTitle}"/>
            <StackPanel Grid.Row="0" HorizontalAlignment="Right" Orientation="Horizontal">
                <controls:TransparentButton Symbol="Bookmarks" Visibility="{
                    Binding IsEmpty.Value, Converter={StaticResource FalsyToVisible}}">
                    <controls:TransparentButton.Flyout>
                        <Flyout Placement="Bottom">
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="IsTabStop" Value="True"/>
                                </Style>
                            </Flyout.FlyoutPresenterStyle>
                            <ListBox ItemsSource="{Binding Items}" MinWidth="200" 
                                SelectedItem="{Binding Selected.Value, Mode=TwoWay}">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Tapped">
                                        <behaviors:CloseFlyoutAction/>
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Title.Value}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Flyout>
                    </controls:TransparentButton.Flyout>
                    <ToolTipService.ToolTip>
                        <TextBlock Text="{Binding ConverterParameter=SelectCategory, 
                            Converter={StaticResource Locale}}"/>
                    </ToolTipService.ToolTip>
                </controls:TransparentButton>
                <controls:TransparentButton Symbol="Sync" Command="{Binding Load}">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="{Binding Converter={StaticResource Locale}, ConverterParameter=Refresh}" />
                    </ToolTipService.ToolTip>
                </controls:TransparentButton>
            </StackPanel>
            <Grid Grid.Row="1" Height="48" VerticalAlignment="Top" Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}"/>
            <Pivot Grid.Row="1" ItemsSource="{Binding Items, Mode=OneTime}" SelectedItem="{Binding Selected.Value, Mode=TwoWay}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Loaded">
                        <core:InvokeCommandAction Command="{Binding Load}"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <Pivot.HeaderTemplate>
                    <DataTemplate x:DataType="implementations:FeedCategoryViewModel">
                        <TextBlock Text="{Binding Title.Value}"/>
                    </DataTemplate>
                </Pivot.HeaderTemplate>
                <Pivot.ItemContainerStyle>
                    <Style TargetType="PivotItem">
                        <Setter Property="Margin" Value="0"/>
                    </Style>
                </Pivot.ItemContainerStyle>
                <Pivot.ItemTemplate>
                    <DataTemplate x:DataType="implementations:FeedCategoryViewModel">
                        <Grid>
                            <toolkit:PullToRefreshListView ShowsScrollingPlaceholders="False" 
                                RefreshCommand="{Binding Fetch}" ItemsSource="{Binding Items}" 
                                IsItemClickEnabled="True" SelectionMode="None">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Loaded">
                                        <core:InvokeCommandAction Command="{Binding Fetch}"/>
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                                <toolkit:PullToRefreshListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="Padding" Value="0"/>
                                    </Style>
                                </toolkit:PullToRefreshListView.ItemContainerStyle>
                                <toolkit:PullToRefreshListView.ItemContainerTransitions>
                                    <TransitionCollection>
                                        <ContentThemeTransition VerticalOffset="0" HorizontalOffset="30"/>
                                        <EntranceThemeTransition FromHorizontalOffset="30" FromVerticalOffset="0"/>
                                    </TransitionCollection>
                                </toolkit:PullToRefreshListView.ItemContainerTransitions>
                                <toolkit:PullToRefreshListView.PullToRefreshContent>
                                    <Border HorizontalAlignment="Center" CornerRadius="10" Width="20" Height="20" 
                                        Background="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"/>
                                </toolkit:PullToRefreshListView.PullToRefreshContent>
                                <toolkit:PullToRefreshListView.ReleaseToRefreshContent>
                                    <Border HorizontalAlignment="Center" CornerRadius="10" Width="20" Height="20" 
                                        Background="{ThemeResource SystemControlBackgroundAccentBrush}"/>
                                </toolkit:PullToRefreshListView.ReleaseToRefreshContent>
                                <toolkit:PullToRefreshListView.ItemTemplate>
                                    <DataTemplate x:DataType="implementations:ArticleViewModel">
                                        <Grid Padding="0 12" Background="Transparent" Opacity="{Binding IsRead.Value,
                                            Mode=OneWay, Converter={StaticResource TruthyToTransparent}}">
                                            <interactivity:Interaction.Behaviors>
                                                <core:EventTriggerBehavior EventName="Holding">
                                                    <behaviors:OpenFlyoutAction/>
                                                </core:EventTriggerBehavior>
                                                <core:EventTriggerBehavior EventName="RightTapped">
                                                    <behaviors:OpenFlyoutAction/>
                                                </core:EventTriggerBehavior>
                                                <core:EventTriggerBehavior EventName="Tapped">
                                                    <core:InvokeCommandAction Command="{Binding Open}"/>
                                                </core:EventTriggerBehavior>
                                            </interactivity:Interaction.Behaviors>
                                            <FlyoutBase.AttachedFlyout>
                                                <MenuFlyout>
                                                    <controls:MenuFlyoutItemWithIcon Icon="PostUpdate" Text="{Binding Converter={StaticResource Locale}, ConverterParameter=Read}" Command="{Binding Open}"/>
                                                    <controls:MenuFlyoutItemWithIcon Icon="Link" Command="{Binding LaunchUri}" Text="{Binding Converter={StaticResource Locale}, ConverterParameter=OpenInBrowser}"/>
                                                    <controls:MenuFlyoutItemWithIcon Icon="Copy" Command="{Binding CopyLink}" Text="{Binding Converter={StaticResource Locale}, ConverterParameter=CopyLink}"/>
                                                    <controls:MenuFlyoutItemWithIcon Icon="ReShare" Command="{Binding Share}" Text="{Binding Converter={StaticResource Locale}, ConverterParameter=ReShare}"/>
                                                    <MenuFlyoutSeparator />
                                                    <controls:MenuFlyoutItemWithIcon Icon="Read" Command="{Binding MarkRead}" 
                                                        Text="{Binding Converter={StaticResource Locale}, ConverterParameter=MarkAsRead}"
                                                        Visibility="{Binding IsRead.Value, Mode=OneWay, Converter={StaticResource FalsyToVisible}}"/>
                                                    <controls:MenuFlyoutItemWithIcon Icon="Mail" Command="{Binding MarkRead}" 
                                                        Text="{Binding Converter={StaticResource Locale}, ConverterParameter=MarkAsUnread}"
                                                        Visibility="{Binding IsRead.Value, Mode=OneWay, Converter={StaticResource TruthyToVisible}}"/>
                                                    <controls:MenuFlyoutItemWithIcon Icon="OutlineStar" Command="{Binding MarkFavorite}"
                                                        Text="{Binding Converter={StaticResource Locale}, ConverterParameter=RemoveFromFavorites}"
                                                        Visibility="{Binding IsFavorite.Value, Mode=OneWay, Converter={StaticResource TruthyToVisible}}"/>
                                                    <controls:MenuFlyoutItemWithIcon Icon="SolidStar" Command="{Binding MarkFavorite}" 
                                                        Text="{Binding Converter={StaticResource Locale}, ConverterParameter=AddToFavorites}"
                                                        Visibility="{Binding IsFavorite.Value, Mode=OneWay, Converter={StaticResource FalsyToVisible}}"/>
                                                </MenuFlyout>
                                            </FlyoutBase.AttachedFlyout>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="94" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid Margin="12 0" VerticalAlignment="Top">
                                                <Ellipse Width="70" Height="70" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                    Fill="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"/>
                                                <SymbolIcon Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                                    Visibility="{Binding Image.Value, Converter={StaticResource FalsyToVisible}}"
                                                    VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="1" Symbol="PostUpdate"/>
                                                <Ellipse x:Name="PictureEllipse" Opacity="0" Width="70" Height="70" 
                                                         VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <Ellipse.Fill>
                                                        <ImageBrush Stretch="UniformToFill">
                                                            <interactivity:Interaction.Behaviors>
                                                                <core:EventTriggerBehavior EventName="ImageOpened">
                                                                    <media:ControlStoryboardAction>
                                                                        <media:ControlStoryboardAction.Storyboard>
                                                                            <Storyboard TargetName="PictureEllipse" TargetProperty="(UIElement.Opacity)">
                                                                                <DoubleAnimationUsingKeyFrames>
                                                                                    <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                                    <EasingDoubleKeyFrame Value="1" KeyTime="0:0:1"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </media:ControlStoryboardAction.Storyboard>
                                                                    </media:ControlStoryboardAction>
                                                                </core:EventTriggerBehavior>
                                                            </interactivity:Interaction.Behaviors>
                                                            <ImageBrush.ImageSource>
                                                                <BitmapImage DecodePixelType="Logical" 
                                                                    UriSource="{Binding Image.Value}"
                                                                    DecodePixelHeight="70"/>
                                                            </ImageBrush.ImageSource>
                                                        </ImageBrush>
                                                    </Ellipse.Fill>
                                                </Ellipse>
                                            </Grid>
                                            <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="0 0 12 0">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE735;" FontSize="11" Margin="0 0 3 -3"
                                                        Visibility="{Binding IsFavorite.Value, Mode=OneWay, Converter={StaticResource TruthyToVisible}}"
                                                        Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"/>
                                                    <TextBlock Grid.Column="1" Text="{Binding Feed.Value, Converter={StaticResource StrToUpper}}" 
                                                        FontSize="11" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"
                                                        TextTrimming="CharacterEllipsis" FontWeight="SemiBold"/>
                                                    <TextBlock Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Top"
                                                        Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"
                                                        Text="{Binding PublishedDate.Value}" FontSize="11" FontWeight="SemiBold"/>
                                                </Grid>
                                                <TextBlock Text="{Binding Title.Value}" TextWrapping="Wrap"/>
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </toolkit:PullToRefreshListView.ItemTemplate>
                            </toolkit:PullToRefreshListView>
                            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center"
                                Visibility="{Binding IsEmpty.Value, Converter={StaticResource TruthyToVisible}}">
                                <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xEB5E;" TextAlignment="Center"
                                    FontSize="50" Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"/>
                                <TextBlock TextAlignment="Center" FontWeight="SemiLight" Margin="12 6" TextWrapping="Wrap" FontSize="24" 
                                    Text="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedNothingTitle}"/>
                                <TextBlock TextWrapping="Wrap" TextAlignment="Center" FontSize="17"
                                    Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                    Text="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedNothing}"/>
                                <Button Content="{Binding Converter={StaticResource Locale}, ConverterParameter=AddChannel}"
                                    Background="{ThemeResource SystemControlBackgroundAccentBrush}" Foreground="White" 
                                    Margin="12" HorizontalAlignment="Center" Command="{Binding OpenSources}"/>
                            </StackPanel>
                            <controls:LoadingScreen IsActive="{Binding IsLoading.Value, Mode=OneWay}"/>
                        </Grid>
                    </DataTemplate>
                </Pivot.ItemTemplate>
            </Pivot>
            <Grid Grid.Row="1" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                Visibility="{Binding IsEmpty.Value, Converter={StaticResource TruthyToVisible}}">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 -48 0 0">
                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE897;" TextAlignment="Center"
                        FontSize="50" Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"/>
                    <TextBlock TextAlignment="Center" FontWeight="SemiLight" Margin="12 6" TextWrapping="Wrap" FontSize="24" 
                       Text="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedWelcomeTitle}"/>
                    <TextBlock TextWrapping="Wrap" TextAlignment="Center" FontSize="17"
                        Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                        Text="{Binding Converter={StaticResource Locale}, ConverterParameter=FeedWelcome}"/>
                    <Button Content="{Binding Converter={StaticResource Locale}, ConverterParameter=AddChannel}"
                        Background="{ThemeResource SystemControlBackgroundAccentBrush}" Foreground="White" 
                        Margin="12" HorizontalAlignment="Center" Command="{Binding OpenSources}"/>
                </StackPanel>
            </Grid>
            <controls:LoadingScreen Grid.Row="1" IsActive="{Binding IsLoading.Value}" Margin="0 48 0 0"/>
        </Grid>
    </Grid>
</Page>
    